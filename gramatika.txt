source -> definitions .

definitions -> definition definitions_ .

definitions_ -> ';' definitions .
definitions_ -> .

definition -> type_definition .
definition -> function_definition .
definition -> variable_definition .

type_definition -> 'typ' 'identifier' ':' type .

type -> 'identifier' .
type -> 'logical' .
type -> 'integer' .
type -> 'string' .
type -> 'arr' '[' 'int_const' ']' type .

function_definition -> 'fun' 'identifier' '(' parameters ')' ':' type '=' expression .

parameters -> parameter parameters_ .

parameters_ -> ',' parameter parameters_ . 
parameters_ -> .

parameter -> 'identifier' ':' type .

expression -> logical_ior_expression expression_ .

expression_ -> '{' 'WHERE' definitions '}' .
expression_ -> .

logical_ior_expression -> logical_and_expression logical_ior_expression_ .

logical_ior_expression_ -> '|' logical_and_expression logical_ior_expression_ .
logical_ior_expression_ -> .

logical_and_expression -> compare_expression logical_and_expression_ .

logical_and_expression_ -> '&' compare_expression logical_and_expression_ . 
logical_and_expression_ -> .

compare_expression -> additive_expression compare_expression_ .

compare_expression_ -> '==' additive_expression .
compare_expression_ -> '!=' additive_expression .
compare_expression_ -> '<=' additive_expression .
compare_expression_ -> '>=' additive_expression .
compare_expression_ -> '<' additive_expression .
compare_expression_ -> '>' additive_expression .
compare_expression_ -> .

additive_expression -> multiplicative_expression additive_expression_ .

additive_expression_ -> '+' multiplicative_expression additive_expression_ .
additive_expression_ -> '-' multiplicative_expression additive_expression_ . 
additive_expression_ -> .

multiplicative_expression -> prefix_expression multiplicative_expression_ .

multiplicative_expression_ -> '*' prefix_expression multiplicative_expression_ . 
multiplicative_expression_ -> '/' prefix_expression multiplicative_expression_ . 
multiplicative_expression_ -> '%' prefix_expression multiplicative_expression_ . 
multiplicative_expression_ -> .

prefix_expression -> '+' prefix_expression .
prefix_expression -> '-' prefix_expression .
prefix_expression -> '!' prefix_expression .
prefix_expression -> postfix_expression .

postfix_expression -> atom_expression postfix_expression_ .

postfix_expression_ -> '[' expression ']' postfix_expression_ .
postfix_expression_ -> .

atom_expression -> 'log_constant' .
atom_expression -> 'int_constant' .
atom_expression -> 'str_constant' .
atom_expression -> 'identifier' atom_expression_ .
atom_expression -> '{' atom_expression__ .
atom_expression -> '(' expressions ')' .

atom_expression_ -> '(' expression ')' .
atom_expression_ -> .

atom_expression__ -> 'while' expression ':' expression '}' .
atom_expression__ -> 'for' identifier '=' expression ',' expression ',' expression ':' expression '}' .
atom_expression__ -> 'if' expression 'then' expression atom_expression___ .
atom_expression__ -> expression '=' expression '}' .

atom_expression___ -> '}' .
atom_expression___ -> 'else' expression '}' .

expressions -> expression expressions_ .

expressions_ -> ',' expressions .
expressions_ -> .

variable_definition -> var identifier ':' type .